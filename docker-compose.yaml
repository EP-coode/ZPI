version: "2.4"

services:
  frontend:
    depends_on:
      - backend
    build:
      dockerfile: ./Dockerfile
      context: ./renderer
    ports:
      - "3000:3000"
    volumes:
      - renderer-node-modules:/usr/src/app/node_modules
    environment:
      - AUTH_SERVICE_URL=http://host.docker.internal:8080
      - DATA_PROVIDER_URL=http://host.docker.internal:8080

  mysql:
    container_name: "mysql_database"
    image: mysql:8.0.31
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: db_example
    ports:
      - "3306:3306"
      - "33060:33060"

  # Uwaga! W przypadku błedu kontenera backendu
  # należy poczekać aż kontener mysql zacznie działać,
  # a następnie uruchomić kontener backednu jeszcze raz

#  php_my_admin:
#    container_name: "phpMyAdmin"
#    depends_on:
#      - mysql
#    image: phpmyadmin:5
#    environment:
#      PMA_ARBITRARY: 1
#    ports:
#      - "8081:80"

  # Aby zalogować się, należy wejść na stronę localhost:8081 i wpisać:
  # Server: mysql
  # User: root


  backend:
    depends_on:
      - mysql
    build:
      dockerfile: ./backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AZURE_BLOB_ACCOUNT_KEY=
      - AZURE_BLOB_ACCOUNT_NAME=studentcommunityimages
      - AZURE_BLOB_CONTAINER=images
      - AZURE_BLOB_ENDPOINT=
      - MYSQL_HOST=
      - DB_NAME=
      - DB_PASS=
      - DB_USER=
      - GMAIL_PASS=
      - GMAIL_USER=
      - JWT_KEY=
volumes:
  mysql-data:
  renderer-node-modules: