spring.jpa.hibernate.ddl-auto=create
#Do zmiany z update na none po pierwszym uruchomieniu (update pozwala na zmiane strukuty bazy, none - nie)
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/${DB_NAME:db_example}
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASS:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.connectionProperties=useUnicode=true;characterEncoding=utf-8;
#spring.jpa.show-sql: true

#JWT
jwt.token.issuer="StudentCommunity"
jwt.token.signing.key=${JWT_KEY:ExampleKey}
#miliseconds
# 10 minutes = 600000  24h = 86400000
jwt.token.access-token.expiration-time=600000
jwt.token.refresh-token.expiration-time=86400000

#Azure blob storage
spring.cloud.azure.storage.blob.account-name=${AZURE_BLOB_ACCOUNT_NAME}
spring.cloud.azure.storage.blob.account-key=${AZURE_BLOB_ACCOUNT_KEY}
spring.cloud.azure.storage.blob.endpoint=${AZURE_BLOB_ENDPOINT}
spring.cloud.azure.storage.blob.container-name=${AZURE_BLOB_CONTAINER}

#EMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USER}
spring.mail.password=${GMAIL_PASS}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

registration.mail.domain=pwr.edu.pl